import os, shutil, tempfile
import uuid

class TemporaryCopy(object):
    '''
    Creates a temporary file based on the given original path
    '''

    def __init__(self,original_path):
        self.original_path = original_path

    def __enter__(self):
        '''
        Names the copy as the same base but with a random unique 8 character suffix
        '''
        temp_dir = tempfile.gettempdir()
        base_name, file_extension = os.path.splitext(os.path.basename(self.original_path))
        unique_id = str(uuid.uuid4())[:8]
        new_base_name = f"{base_name}_{unique_id}{file_extension}"
        self.path = os.path.join(temp_dir, new_base_name)
        shutil.copy2(self.original_path, self.path)
        print("__enter__: self.path", self.path)
        return self.path

    def __exit__(self, exc_type, exc_val, exc_tb):
        os.remove(self.path)

'''
Reads the contents of .txt files in the directory and outputs it in a list
'''
def read_inputs(directory):
    file_contents = []

    files = [f for f in os.listdir(directory) if f.endswith(".txt")]

    for file_name in files:
        file_path = os.path.join(directory, file_name)
        with open(file_path, 'r') as file:
            content = file.read()
            file_contents.append(content)

    return file_contents

'''
Deletes the data files and reports generated by the workers
'''
def cleanup(queue):
    while not queue.empty():
        base, _ = os.path.splitext(os.path.basename(queue.get()))
        data_file = base + '.coverage'
        report_file = base + '.json'
        if os.path.exists(data_file):
            os.remove(data_file)
        if os.path.exists(report_file):
            os.remove(report_file)
